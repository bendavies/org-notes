* cluster
** AffinityPropagation
** AgglomerativeClustering
** DBSCAN
** FeatureAgglomeration
** KMeans
** MiniBatchKMeans
** MeanShift
** SpectralClustering
** Ward
** estimate_bandwidth
** k_means
** ward_tree
** affinity_propagation
** dbscan
** mean_shift
** spectral_clustering
* cluster.bicluster
** SpectralBiclustering
** SpectralCoclustering
* covariance
** EmpiricalCovariance
** EllipticEnvelope
** GraphLasso
** GraphLassoCV
** LedoitWolf
** MinCovDet
** OAS
** ShrunkCovariance
** empirical_covariance
** ledoit_wolf
** shrunk_covariance
** oas
** graph_lasso
* cross_validation
** KFold
** LeavOneLabelOut
** LeaveOneOut
** LeavePLabelOut
** LeavePOut
** StratifiedKFold
** ShuffleSplit
** StratifiedShuffleSplit
** train_test_split
** cross_val_score
** permutation_test_score
** check_cv
* datasets
** fetch_20newsgroups
   download the 20 newsgroups dataset; write to files
** fetch_20newsgroups_vectorized
   as above, but convert documents to tf-idf vectors
** load_boston
   regression; 506 samples, 13 dim
** load_diabetes
   regression; 442 samples, 10 dim
** load_digits
   classification; 180 samples per each of 10 classes; 64 dimensions of 17 vals
** load_files
   load text files; subfolder names are categories
** load_iris
   classification; 50 samples per each of 3 classes; 4 dimensions
** load_lfw_pairs
   deprecated
** fetch_lfw_pairs
   Labeled Faces in the Wild pairs dataset; for Face Verification; JPEG RGB
** load_lfw_people
   deprecated
** fetch_lfw_people
   Labeled Faces in the Wild people dataset; JPEG pictures, RGB floats [0,1]
** load_linnerud
   multivariate regression; 20 samples; 3 dimensions
** fetch_mldata
** fetch_olivetti_faces
** fetch_california_housing
** fetch_covtype
** load_mlcomp
** load_sample_image
** load_sample_images
** load_svmlight_file
** dump_svmlight_file
** make_blobs
** make_classification
** make_circles
** make_friedman1
** make_friedman2
** make_friedman3
** make_gaussian_quantiles
** make_hastie_10_2
** make_low_rank_matrix
** make_moons
** make_multilabel_classification
** make_regression
** make_s_curve
** make_sparse_coded_signal
** make_sparse_spd_matrix
** make_sparse_uncorrelated
** make_spd_matrix
** make_swiss_roll
** make_biclusters
** make_checkerboard
* decomposition
** PCA
** ProjectedGradientNMF
** RandomizedPCA
** KernelPCA
** FactorAnalysis
** FastICA
** TruncatedSVD
** NMF
** SparsePCA
** MiniBatchSparsePCA
** SparseCoder
** DictionaryLearning
** MiniBatchDictionaryLearning
** fastica
** dict_learning
** dict_learning_online
** sparse_encode
* dummy
** DummyClassifier
** DummyRegressor
* ensemble
** AdaBoostClassifier
** AdaBoostRegressor
** BaggingRegressor
** ExtraTreesClassifier
** ExtraTreesRegressor
** GradientBoostingClassifier
** GradientBoostingRegressor
** RandomForestClassifier
** RandomTreesEmbedding
** RandomForestRegressor
* ensemble.partial_dependence
** partial_dependence
** plot_partial_dependence
* feature_extraction
** DictVectorizer
** FeatureHasher
* feature_extraction.image
** grid_to_graph
** extract_patches_2d
** reconstruct_from_patches_2d
** PatchExtractor
* feature_extraction.text
** CountVectorizer
** HashingVectorizer
** TfidfTransformer
** TfidfVectorizer
* feature_selection
** GenericUnivariateSelect
** SelectPercentile
** SelectKBest
** SelectFpr
** SelectFdr
** SelectFwe
** RFE
** RFECV
** VarianceThreshold
** chi2
** f_classif
** f_regression
* gaussian_process
** GaussianProcess
* gaussian_process.correlation_models
** absolute_exponential
** squared_exponential
** generalized_exponential
** pure_nugget
** cubic
** linear
** constant
** linear
** quadratic
* grid_search
** GridSearchCV
** ParameterGrid
** ParameterSampler
** RandomizedSearchCV
* isotonic
** IsotonicRegression
** isotonic_regression
** check_increasing
* kernel_approximation
** AdditiveChi2Sampler
** Nystroem
** RBFSampler
** SkewedChi2Sampler
* lda
** LDA
* learning_curve
** learning_curve
** validation_curve
* linear_model
** ARDRegression
** BayesianRidge
** ElasticNet
** ElasticNetCV
** Lars
** LarsCV
** Lasso
** LassoCV
** LassoLars
** LassoLarsCV
** LassoLarsIC
** LinearRegression
** LogisticRegression
** MultiTaskLasso
** MultiTaskElasticNet
** MultiTaskLassoCV
** MultiTaskElasticNetCV
** OrthogonalMatchingPursuit
** OrthogonalMatchingPursuitCV
** PassiveAggressiveClassifier
** PassiveAggressiveRegressor
** Perceptron
** RandomizedLasso
** RandomizedLogisticRegression
** RANSACRegressor
** Ridge
** RidgeClassifier
** RidgeClassifierCV
** RidgeCV
** SGDClassifier
** SGDRegressor
** lars_path
** lasso_path
** lasso_stability_path
** orthogonal_mp
** orthogonal_mp_gram
* manifold
** LocallyLinearEmbedding
** Isomap
** MDS
** SpectralEmbedding
** TSNE
** locally_linear_embedding
** spectral_embedding
* metrics
** make_scorer
** accuracy_score
** auc
** average_precision_score
** classification_report
** confusion_matrix
** f1_score
** fbeta_score
** hamming_loss
** hinge_loss
** jaccard_similarity_score
** log_loss
** matthews_corrcoef
** precision_recall_curve
** precision_recall_fscore_supprt
** precision_score
** recall_score
** roc_auc_score
** zero_one_loss
** explained_variance_score
** mean_absolute_error
** mean_squared_error
** r2_score
** adjusted_mutual_info_score
** adjusted_rand_score
** completeness_score
** homogenity_completeness_v_measure
** homogeneity_score
** silhouette_score
** silhouette_samples
** v_measure_score
** consensus_score
* metrics.pairwise
** additive_chi2_kernel
** chi2_kernel
** distance_metrics
** euclidean_distances
** kernel_metrics
** linear_kernel
** manhattan_distances
** pairwise_distances
** pairwise_kernels
** polynomial_kernel
** rbf_kernel
* metrics
** pairwise_distances
** pairwise_distances_argmin
** pairwise_distances_argmin_min
* mixture
** GMM
** DPGMM
** VBGMM
* multiclass
** OneVsRestClassifier
** OneVsOneClassifier
** fit_ovo
** predict_ovo
** fir_ecoc
** predict_ecoc
* naive_bayes
** GaussianNB
** MultinomialNB
** BernoulliNB
* neighbors
** NearestNeighbors
   Implemented in BallTree, KDTree and brute-force pairwise
** KNeighborsClassifier
** RadiusNeighborsClassifier
** KNeighborsRegressor
** RadiusNeighborsRegressor
** NearestCentroid
** BallTree
** KDTree
** DistanceMetric
** KernelDensity
** kneighbors_graph
** radius_neighbors_graph
* neural_network
** BernoulliRBM
   Restricted Boltzmann Machines (RBMs)

   Assume: input in {0, 1}.

   TODO: structure of RBMs

   Uses logistic sigmoid function;

   Gradient descends with derivative of logistic sigmoid.
* cross_decomposition
** PLSRegression
** PLSCanonical
** CCA
** PLSSVD
* pipeline
** Pipeline
** FeatureUnion
** make_pipeline
** make_union
* preprocessing
** Binarizer
** Imputer
** KernelClassifier
** LabelBinarizer
** LabelEncoder
** MultiLabelBinarizer
** MinMaxScaler
** Normalizer
** OneHotEncoder
** StandardScaler
** PolynomialFeatures
** add_dummy_feature
** binarize
** label_binarize
** normalize
** scale
* qda
** QDA
* random_projection
** GaussianRandomProjection
** SparseRandomProjection
** johnson_lindenstrauss_min_dim
* semi_supervised
** LabelPropagation
** LabelSpreading
* svm
** SVC
** LinearSVC
** NuSVC
** SVR
** NuSVR
** OneClassSVM
** l1_min_c
* svm.libsvm
** fit
** decision_function
** predict
** predict_proba
** cross_validation
* tree
** DecisionTreeClassifier
** DecisionTreeRegressor
** ExtraTreeClassifier
** ExtraTreeRegressor
** export_graphviz
* utils
** check_random_state
** resample
   given a sequence of arrays, returns samples from that sequence
** shuffle
   given a sequence of arrays, permutes that sequence
